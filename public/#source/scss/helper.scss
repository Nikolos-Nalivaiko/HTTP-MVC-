
/*

property - властивість, яку змінюємо
startSize - початкове значення
minSize - мінімальне значення
type - режим 1-3

! Пропорціонально збільшує розміри - треба вирішити
*/
@mixin adaptive-value($property, $startSize, $minSize) {
    $addSize: $startSize - $minSize; 
	
	@media (max-width:1600px) {
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));	
	}

	@media (min-width:1600px) {
		#{$property}: #{$startSize + px};	
	}
}

//REM
@function rem($px) {
	$result: math.div($px, 16) + rem;
	@return $result;
}
//EM
@function em($px, $current: 16) {
	$result: math.div($px, $current) + em;
	@return $result;
}

@mixin adaptive-font($maxSize, $minSize) {
	$addSize: $maxSize - $minSize;
	$addMobSize:$addSize + $addSize + 0.7;

	@media (max-width:1600px) {
		@media (max-width:767px) {
			font-size: calc(#{$minSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
		}
		@media (min-width:767px) {
			font-size: calc(#{$minSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
		}			
	}

	@media (min-width:1600px) {
		font-size: #{$maxSize + px};	
	}
}